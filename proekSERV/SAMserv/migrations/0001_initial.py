# Generated by Django 5.2.6 on 2025-10-10 07:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(max_length=25)),
                ('first_name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
                ('part_source', models.CharField(max_length=50)),
                ('supplier', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('serial_number', models.CharField(max_length=50)),
                ('appearance', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(max_length=25)),
                ('first_name', models.CharField(max_length=25)),
                ('phone_number', models.CharField(max_length=20)),
                ('position', models.CharField(choices=[('master', 'Мастер'), ('cashier', 'Кассир'), ('admin', 'Администратор')], max_length=50)),
                ('access_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('service_cost', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('diagnostics', 'Диагностика'), ('repair', 'В ремонте'), ('ready', 'Готов'), ('issued', 'Выдан')], default='new', max_length=20)),
                ('final_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('issue_description', models.TextField()),
                ('diagnosis', models.TextField(blank=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cashier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_as_cashier', to='SAMserv.employee')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAMserv.client')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAMserv.device')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_as_master', to='SAMserv.employee')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAMserv.detail')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAMserv.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='details',
            field=models.ManyToManyField(through='SAMserv.OrderDetail', to='SAMserv.detail'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('cash', 'Наличные'), ('card', 'Карта'), ('qr', 'QR-код')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='SAMserv.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAMserv.order')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SAMserv.service')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='services',
            field=models.ManyToManyField(through='SAMserv.OrderService', to='SAMserv.service'),
        ),
    ]
